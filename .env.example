# Environment Configuration Example
# Copy this file to .env.local and fill in your actual values

# ============================================
# REQUIRED - OpenAI ChatKit Configuration
# ============================================

# Your OpenAI API key
# Get it from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# Your ChatKit workflow ID
# Get it from: https://platform.openai.com/chatkit
CHATKIT_WORKFLOW_ID=your-workflow-id-here

# ============================================
# REQUIRED - Supabase Waitlist Storage
# ============================================

# Supabase project URL
SUPABASE_URL=https://your-project-ref.supabase.co

# Supabase service role key (keep secret!)
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

# Domain verification key for your deployed domain (ChatKit Security)
# Generate in: https://platform.openai.com/settings/organization/security
OPENAI_DOMAIN_KEY=your-domain-domainkey-here

# ============================================
# OPTIONAL - Server Configuration
# ============================================

# Server port (default: 3000)
PORT=3000

# Node environment (development | production)
NODE_ENV=development

# ============================================
# OPTIONAL - ChatKit Configuration
# ============================================

# Session cookie name (default: chatkit_session_id)
CHATKIT_SESSION_COOKIE=chatkit_session_id

# CORS origin (default: true for all origins)
# Set to specific domain in production: https://yourdomain.com
CHATKIT_CORS_ORIGIN=true

# Enable file uploads (default: true)
CHATKIT_ENABLE_UPLOADS=true

# Maximum number of files per upload (default: 5)
CHATKIT_MAX_FILES=5

# Maximum file size in MB (default: 10)
CHATKIT_MAX_FILE_SIZE_MB=10

# Rate limiting - max requests per minute (default: 10)
CHATKIT_MAX_REQUESTS_PER_MINUTE=10

# ============================================
# NOTES
# ============================================

# 1. Never commit .env.local to version control
# 2. Keep your API keys secure and rotate them regularly
# 3. Use different API keys for development and production
# 4. In production, set NODE_ENV=production for optimized builds
# 5. Configure CORS properly for production deployments
